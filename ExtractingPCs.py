#ExtractingPCs.py


#General packages
import GeneralFunctions as GF
from GeneralFunctions import st
from Parameters import P

import numpy as np
from numpy import log as ln
import os
import pandas as pd
import math as mt
import statistics
from itertools import islice #for selecting dictionary items
import matplotlib
from matplotlib import pyplot as plt
from collections import OrderedDict
#import sys




#Setting global vriables
pathwaygenes = {}

help_name = ""
df_subjects = pd.DataFrame([])
df_RNA_seq = pd.DataFrame([])
############################ FUNCTIONS #########################################
def set_vars():
	global help_name
	global df_subjects
	global df_RNA_seq
	help_name = ""
	if P.select_on_genes: help_name = P.GENE_SELECTION #variable for nameing files and folders
	else: help_name = "NoGeneSelection"
	if P.use_middle_age:	help_name += "_With-MiddleAge"
	else: 								help_name += "_No-MiddleAge"
	
	pathwaygenes = {}
	df_subjects = pd.DataFrame([])
	df_RNA_seq = pd.DataFrame([])

################################################################################
############################# THE MAIN CODE ####################################
################################################################################

def extractingpcs():
	set_vars()
	if "Files_from_R" not in os.listdir('./'+P.experiment_name):
		exit("No PCfiles generated by R")
	
	print("nee:", help_name)

	
	df = pd.read_csv(P.experiment_name+"/Files_from_R/"+help_name+"_PCs.txt", delimiter="\t")
	print(df)
	exit()
	f = open(P.experiment_name+"/Files_from_R/"+help_name+"_PCs.txt", "r")
	
	
	
	for i in f: #looping over rows in PCas file
		print(i)
		input()
		pass
		#print()
		#f.write(i[0]+" "+str(i[1])+"\n")
	f.close
	
	
	
	
	
	
	
	
	
	
	
	
	
	

